source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/git-repos/DataScienceCapStone")
setwd("~/git-repos/DataScienceCapStone")
library(shiny)
runApp("WordPredictionApp")
rsconnect::showLogs()
?rsconnect::showLogs()
install.packages('rsconnect')
install.packages("rsconnect")
library(rsconnect)
?rsconnect::showLogs()
rsconnect::showLogs()
rsconnect::showLogs(".")
getwd()
rsconnect::showLogs("WordPrdictionApp")
source("Common.r")
?tolower
setwd("~/git-repos/DataScienceCapStone")
source("Common.r")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
length(docs[[3]])
length(docs[[3]]$content)
length(docs[[1]]$content)
length(docs[[2]]$content)
length(docs[[3]]$content)
corpus_df <- data.frame(text=lapply(docs[1], '[',"content"), stringsAsFactors=F)
corpus_df <- rbind(corpus_df,data.frame(text=lapply(docs[2], '[',"content"), stringsAsFactors=F))
corpus_df <- rbind(corpus_df,data.frame(text=lapply(docs[3], '[',"content"), stringsAsFactors=F))
length(corpus_df)
corpus_df<-corpus_df$content
corpus_df[19]
length(corpus_df)
n<-sample(length(corpus_df),100)
n
n<-sample(length(corpus_df),10)
n
corpus_df[n]
testset<-corpus_df[n]
testset<-corpus_df[n]
testset
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/git-repos/DataScienceCapStone")
library(shiny)
runApp("WordPredictionApp")
setwd("~/git-repos/DataScienceCapStone")
library(shiny)
runApp("WordPredictionApp")
print(getwd())
setwd("C:/Dev/Repos/10-DataScienceCapStone/WordPredictionApp")
source("Common.R")
setwd("C:/Dev/Repos/10-DataScienceCapStone/WordPredictionApp")
setwd("C:\\Dev\\Repos\\10-DataScienceCapStone\\WordPredictionApp")
setwd("~/git-repos/DataScienceCapStone/WordPredictionApp")
source("Common.R")
n1GramTable<-read.csv("Data/N1GramsKN.csv",colClasses = c("character","integer"))
n2GramTable<-read.csv("Data/N2GramsKN.csv",colClasses = c("character","character","integer"))
n3GramTable<-read.csv("Data/N3Grams.csv",colClasses = c("character","character","integer"))
n3GramTable<-read.csv("Data/N3Grams.csv",colClasses = c("character","character","integer"))
head(n1GramTable)
head(n2GramTable)
head(n3GramTable)
setwd("~/git-repos/DataScienceCapStone")
library(shiny)
runApp("WordPredictionApp")
setwd("~/git-repos/DataScienceCapStone")
library(shiny)
runApp("WordPredictionApp")
setwd("~/git-repos/DataScienceCapStone")
library(shiny)
runApp("WordPredictionApp")
test<-"I"
x<-"I"
nWords<-3
matches<-gregexpr("[[:alpha:](\'[:alpha:])?]+",x)
matches
m3<-tail(matches[[1]],n=nWords)
m3
matches[[1]]
tail(matches[[1]],n=nWords)
res<-substr(x,m3[1],nchar(x))
res
setwd("~/git-repos/DataScienceCapStone")
library(shiny)
runApp("WordPredictionApp")
setwd("~/git-repos/DataScienceCapStone")
library(shiny)
runApp("WordPredictionApp")
x<-""
matches<-gregexpr("[[:alpha:](\'[:alpha:])?]+",x)
matches
m3<-tail(matches[[1]],n=nWords)
m3
res<-substr(x,m3[1],nchar(x))
res
substr(x,m3[1],nchar(x))
x<-NULL
matches<-gregexpr("[[:alpha:](\'[:alpha:])?]+",x)
m3<-tail(matches[[1]],n=nWords)
matches[[1]]
matches
length(matches)
if(x==NULL) x<-""
setwd("~/git-repos/DataScienceCapStone")
library(shiny)
runApp("WordPredictionApp")
predictWord("This is my favorite holiday")
predictWord("This is my favorite holiday",5)
source("Common.R")
predictWord <-function(test,n) {
if(debug.print){
print(paste0("Predicting for \'",test,"\'"))
}
testNGram<-getTail(test)
testNGram2<-getTail(testNGram,2)
f<-filter(n3GramTable, t1 == testNGram2)
r<-NULL
if(nrow(f)>0){
r<-f[1:(min(nrow(f),n)),2]
}
if(length(r)<n)
{
testNGram1<-getTail(testNGram,1)
f<-filter(n2GramTable, t1 == testNGram1)
if(nrow(f)>0){
r<-c(r,f[1:min(nrow(f),n-length(r)),2])
}
}
if(length(r)<n)
{
r2<-n1GramTable[1:(n-length(r)),1]
r<-c(r,r2)
}
r
}
predictWord("This is my favorite holiday",5)
setwd("~/git-repos/DataScienceCapStone")
library(shiny)
runApp("WordPredictionApp")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(ngt3)
tail(ngt3)
head(ngt3,50)
head(ngt3[10000:11000],50)
head(ngt3[10000:11000,],50)
head(c2)
ff2<-table(c2$t1)
ff2
ff2<-setorder(ff2, -freq )
ff2<-data.frame(table(c2$t1))
ff2<-setorder(ff2, -freq )
head(ff2)
ff2<-setorder(ff2, -Freq )
head(ff2)
head(ff2,n=100)
head(ff2,n=400)
head(ff2,n=1000)
len(ff2)
nrow(ff2)
c2[t1=="effort"]
c2[c2[,1]=="effort"]
str(c2)
str(ngt2)
ngt2[2876,1]
as.charater(ngt2[2876,1])
as.character(ngt2[2876,1])
ngt2[as.character(ngt2[,1])=="after"]
ngt2[as.character(ngt2[,1])=="after"]
ngt2[as.character(ngt2[,28761])=="after"]
ngt2[as.character(ngt2[,2876])=="after"]
as.character(ngt2[,2876])=="after"
ngt2[,2876]=="after"
ngt2[2876,1]=="after"
ngt2[ngt2[,1]=="after"]
ngt2[ngt2[,1]=="after"]
ngt2[ngt2[,1]=="after",]
?first
first(ngt2[ngt2[,1]=="after",])
first(ngt2[ngt2[,1]=="after",])
first(ngt2[ngt2[,1]=="after",],5)
ngt2[ngt2[,1]=="after",][1:10,]
y<-unique(ngt$t1)
y<-unique(ngt2$t1)
ngt2[ngt2[,1]=="after",]
ngt2[ngt2[,1]=="after",][1:10,]
y2<-lapply(y, function(y){ngt2[ngt2[,1]=="after",][1:10,]})
length(y)
y<-data.frame(unique(ngt2$t1))
y
y<-data.frame(unique(ngt2$t1))
y2<-lapply(y, function(y){ngt2[ngt2[,1]==y,][1:10,]})
colnames(y)<-"word"
y<-data.frame(unique(ngt2$t1))
y<-data.frame(unique(ngt2$t1))
colnames(y)<-"word"
y2<-lapply(y, function(y){ngt2[ngt2[,1]==y$word,][1:10,]})
head(y)
head(y)
head(y)
y[1]
y[,1]
y[1,1]
y<-unique(ngt2$t1)
head(y)
y<-as.charater(unique(ngt2$t1))
y<-as.character(unique(ngt2$t1))
head(y)
y2<-lapply(y, function(y){ngt2[ngt2[,1]==y,][1:10,]})
length(y)
y<-y[1:30]
y
y2<-lapply(y, function(y){ngt2[ngt2[,1]==y,][1:10,]})
head(y2)
y2<-lapply(y, function(y){
a<-ngt2[ngt2[,1]==y,]
a[1:min(10,nrow(a)),]
})
y2<-lapply(y, function(y){
a<-ngt2[ngt2[,1]==y,]
a[1:min(10,nrow(a)),]
})
head(y2)
y2<-lapply(y, function(y){
a<-ngt2[ngt2[,1]==y,]
a[1:min(10,nrow(a)),]
})
head(y2)
y2<-sapply(y, function(y){
a<-ngt2[ngt2[,1]==y,]
a[1:min(10,nrow(a)),]
})
head(y2)
yr<-NULL
y2<-lapply(y, function(y){
a<-ngt2[ngt2[,1]==y,]
yr<-rbind(yr,a[1:min(10,nrow(a)),])
})
head(y2)
head(yr)
y2<-data.frame(y2)
y2<-rbind(y2)
head(y2)
y2<-lapply(y, function(y){
ngt2[ngt2[,1]==y,][1:min(10,nrow(ngt2[ngt2[,1]==y,])),]
})
y2<-lapply(y, function(y){
ngt2[ngt2[,1]==y,][1:min(10,nrow(ngt2[ngt2[,1]==y,])),]
})
head(y2)
y2[[1]]
y2[1]
y2[1]
y2<-lapply(y, function(y){
a<-ngt2[ngt2[,1]==y,]
[1:min(10,length(a)),]
})
y2<-lapply(y, function(y){
a<-ngt2[ngt2[,1]==y,]
a[1:min(10,length(a)),]
})
head(y2)
a[1:min(10,nrow(a)),]
y2<-lapply(y, function(y){
a<-ngt2[ngt2[,1]==y,]
a[1:min(10,nrow(a)),]
})
head(y2)
y2<-apply(y,1, function(y){
a<-ngt2[ngt2[,1]==y,]
a[1:min(10,nrow(a)),]
})
ngt$count<-0
ngt2$count<-0
head(ngt2)
source('~/.active-rstudio-document', echo=TRUE)
x<-ngt2[1:1000,]
tail(x)
x<-ngt2[1:1100,]
tail(x)
x<-c2[1:1100,]
tail(x)
x<-c2[1000:1200,]
tail(x)
head(x)
x<-c2[1500:2500,]
head(x)
tail(x)
y<-ddply(x, .(tt), function(x) { i <<- i + 1; data.frame(i=i, res=mean(x$b)) })
library(plyr)
y<-ddply(x, .(tt), function(x) { i <<- i + 1; data.frame(i=i, res=mean(x$b)) })
tail(x)
y<-ddply(x, .(t1), function(x) { i <<- i + 1; data.frame(i=i, res=mean(x$b)) })
i<-1
y<-ddply(x, .(t1), function(x) { i <<- i + 1; data.frame(i=i, res=mean(x$b)) })
warnings()
y<-ddply(x, .(t1), function(x) { i <<- i + 1; data.frame(i=i) })
head(y)
i<-1
y<-ddply(x, .(t1), function(x) { i <<- i + 1; data.frame(i=i) })
head(y)
i<-1
y<-ddply(x, .(t1), function(x) { i <- i + 1; data.frame(i=i) })
head(y)
y<-adply(x, .(t1), .margins=1, function(x) { i <<- i + 1; data.frame(i=i) })
y<-adply(x, .(t1), function(x) { i <<- i + 1; data.frame(i=i) },.margins = 1)
y<-adply(x,.margins = 1, .(t1), function(x) { i <<- i + 1; data.frame(i=i) })
y<-adply(x,.margins = 1,  function(x) { i <<- i + 1; data.frame(i=i) })
head(y)
tail(y)
x$Rank <- ave(x$t1,  FUN = rank)
x$Rank <- ave(x$t1,x$freq,  FUN = rank)
head(x)
warnings()
x$Rank <- ave(as.character(x$t1),x$freq,  FUN = rank)
head(x)
tail(x)
x$Rank <- rank(x$t1)
tail(x)
head(x)
x$Rank <- rank(x$t1)
head(x)
head(x,n=100)
x$order <- order(x$t1)
head(x,n=100)
x$order <- order(x$t1,x$t2)
head(x,n=100)
y<-adply(x,.margins = 1,  function(x) { if(x==w){i <<- i + 1 }else{w<-x;i<<-1}   ; data.frame(i=i) })
i<-1
w<-NULL
y<-adply(x,.margins = 1,  function(x) { if(x==w){i <<- i + 1 }else{w<-x;i<<-1}   ; data.frame(i=i) })
w<-""
y<-adply(x,.margins = 1,  function(x) { if(x==w){i <<- i + 1 }else{w<-x;i<<-1}   ; data.frame(i=i) })
tail(y)
warnings()
x<-c2[1500:2500,]
i<-1
w<-""
y<-adply(x,.margins = 1,  function(x) { if(w==X){i <<- i + 1 }else{w<-x;i<<-1}   ; data.frame(i=i) })
y<-adply(x,.margins = 1,  function(x) { if(w==x$t1){i <<- i + 1 }else{w<-x$t1;i<<-1}   ; data.frame(i=i) })
tail(y)
y<-adply(x,.margins = 1,  function(x) { if(w==x$t1){i <<- i + 1 }else{w<<-x$t1;i<<-1}   ; data.frame(i=i) })
tail(y)
head(x,n=100)
head(y,n=100)
#ngt2[ngt2[,1]=="after",][1:10,]
library(plyr)
?ddply
x<-c2
i<-1
w<-""
y<-adply(x,.margins = 1,  function(x) { if(w==x$t1){i <<- i + 1 }else{w<<-x$t1;i<<-1};data.frame(i=i) })
head(y,n=100)
tail(y,n=100)
warnings()
head(y,n=100)
tail(y,n=100)
head(y,n=100)
x<-data.table(c2)
i<-1
i<-1
w<-""
y<-adply(x,.margins = 1,  function(x) { if(w==x$t1){i <<- i + 1 }else{w<<-x$t1;i<<-1};data.frame(i=i) })
?lapply
x<-c2[1000:2000,]
y<-lapply(x, function(x){if(w==x$t1){i <<- i + 1 }else{w<<-x$t1;i<<-1};data.frame(i=i) })
y<-lapply(x, function(x){if(w==t1){i <<- i + 1 }else{w<<-t1;i<<-1};data.frame(i=i) })
head(x)
y<-lapply(x, function(x){if(w==x[1]){i <<- i + 1 }else{w<<-x[1];i<<-1};data.frame(i=i) })
y<-lapply(x, function(x){if(w==as.character(x[1])){i <<- i + 1 }else{w<<-x[1];i<<-1};data.frame(i=i) })
head(y,n=100)
tail(y,n=100)
y<-lapply(x, function(x){if(w==as.character(x[1])){i <<- i + 1 }else{w<<-x[1];i<<-1};i })
head(y,n=100)
y<-adply(x,.margins = 1,  function(x) { if(w==x$t1){i <<- i + 1 }else{w<<-x$t1;i<<-1};data.frame(i=i) })
?seq_along
ux<-unique(x)
u
ux
ux<-unique(x$t1)
ux
ux<-as.character(unique(x$t1))
ux
x$xs<-0
i<-5
s<-ux[i]
s
s1<-x[x[,1]==s]
s1<-x[x[,1],]==s]
s
x[,1],]==s
x[,1]==s
x[x[,1]==s]
s1<-x[x[,1]==s,]
s1
s1$xs<-seq_along(length(s1))
s1
for(i in 1:length(ux)){
s<-ux[i]
s1<-x[x[,1]==s,]
s1$xs<-seq_along(length(s1))
}
head(x,n=100)
s<-ux[i]
s1<-x[x[,1]==s,]
x[x[,1]==s,]$xs<-seq_along(length(s1))
for(i in 1:length(ux)){
s<-ux[i]
s1<-x[x[,1]==s,]
x[x[,1]==s,]$xs<-seq_along(length(s1))
}
head(x,n=100)
tail(y,n=100)
x<-c2
head(x)
x$xs<-0
ux<-as.character(unique(x$t1))
for(i in 1:length(ux)){
s<-ux[i]
s1<-x[x[,1]==s,]
x[x[,1]==s,]$xs<-seq_along(length(s1))
}
i<-20
s1<-x[x[,1]==ux[i],]
x[x[,1]==ux[i],]$xs<-seq_along(length(s1))
x<-c2
x<-c2[1:10000,]
head(x)
x$xs<-0
ux<-as.character(unique(x$t1))
for(i in 1:length(ux)){
s1<-x[x[,1]==ux[i],]
x[x[,1]==ux[i],]$xs<-seq_along(length(s1))
}
dim(c2)
x<-c2
head(x)
x$xs<-0
ux<-as.character(unique(x$t1))
for(i in 1:length(ux)){
s1<-x[x[,1]==ux[i],]
x[x[,1]==ux[i],]$xs<-seq_along(length(s1))
}
head(x,n=100)
tail(y,n=100)
head(x,n=100)
tail(y,n=100)
x1<-filter(x,xs>10)
x1
x1<-select(x,xs>10)
?filter
library(dplyr)
x1<-filter(x,xs>10)
x1
tail(x,n=100)
x<-c2[1:10000]
x<-c2[1:10000,]
head(x)
x$xs<-0
ux<-as.character(unique(x$t1))
for(i in 1:length(ux)){
s<-ux[i]
s1<-x[x[,1]==s,]
x[x[,1]==s,]$xs<-seq_along(length(s1))
}
head(x,n=100)
tail(x,n=100)
i<-5
s<-ux[i]
s
s1<-x[x[,1]==s,]
s1
x[x[,1]==s,]$xs<-seq_along(length(s1))
x[x[,1]==s,]
length(s1)
nrow(s1)
x[x[,1]==s,]$xs<-seq_along(nrow(s1))
x[x[,1]==s,]
x[x[,1]==s,]$xs
x[x[,1]==s,]
x[x[,1]==s,]$xs
x[x[,1]==s,]$xs<-seq_along(nrow(s1))
x[x[,1]==s,]
seq_along(nrow(s1))
seq_along(s1)
s1
nrow(s1)
seq_along(1433)
?seq_along
x[x[,1]==s,]
length(x[x[,1]==s,])
seq_along(s1)
seq_along(nrow(s1)
)
s1<-x[x[,1]==s]
s1<-x[x[,1]==s,1]
s1
seq_along(s1)
for(i in 1:length(ux)){
s<-ux[i]
s1<-x[x[,1]==s,1]
x[x[,1]==s,]$xs<-seq_along(s1)
}
head(x,n=100)
tail(x,n=100)
x1<-filter(x,xs<10)
dim(x1)
head(x1,n=100)
tail(x1,n=100)
